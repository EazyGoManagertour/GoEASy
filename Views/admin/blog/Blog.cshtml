<!DOCTYPE html>
<html lang="vi">
 @Html.Partial("~/Views/admin/share/head.cshtml")


<body>
    <!-- Header -->
    @Html.Partial("~/Views/admin/share/header.cshtml")

    <!-- Overlay for mobile -->
    <div class="overlay" onclick="toggleSidebar()"></div>

    <div class="container-content">
        <!-- Sidebar -->
        @Html.Partial("~/Views/admin/share/menu.cshtml")



        <!-- Toast Notification Area (independent from sidebar and overlay) -->
        <div id="toastArea"
             aria-live="polite"
             aria-atomic="true"
             class="toast-container position-fixed top-0 end-0 p-3"
             style="z-index: 1060; margin-top: 75px;">
            <input type="hidden" id="toast-success-msg" value="@TempData["Success"]" />
            <input type="hidden" id="toast-error-msg" value="@TempData["Error"]" />
            <!-- Success Toast -->
            <div class="toast align-items-center text-white bg-success border-0"
                 id="successToast"
                 role="alert"
                 aria-live="assertive"
                 aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        @TempData["Success"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>

            <!-- Error Toast -->
            <div class="toast align-items-center text-white bg-danger border-0"
                 id="errorToast"
                 role="alert"
                 aria-live="assertive"
                 aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        @TempData["Error"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-header">
                <h1 class="content-title">Manage Blog</h1>
                <div class="action-buttons">
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">
                        <i class="fas fa-plus"></i>
                        Add New
                    </button>
                    <!-- <button class="btn btn-success">
                      <i class="fas fa-file-export"></i>
                      Xuất Excel
                    </button> -->
                </div>
            </div>

            <!-- Table 2 -->
            <div class="table-container">
                <div class="table-header">
                    <!-- <h1 class="table-title">Manage Account</h1> -->
                </div>
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th>Avatar</th>
                            <th>Title</th>
                            <th>Short Description</th>
                            <th>Category</th>
                            <th>Author</th>
                            <th>Approval</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var blog in Model)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" />
                                </td>

                                <td>
                                    @{
                                        string avatar = "/image/default.jpg"; // đúng là "image" không có "s"

                                        foreach (var img in blog.BlogImages)
                                        {

                                                            if (img.IsMain == true && !string.IsNullOrEmpty(img.ImageURL))
                {
                    avatar = "/" + img.ImageURL.TrimStart('/'); // đảm bảo format đúng

                                                break;
                                            }
                                        }
                                    }
                                    <img src="@avatar"
                                         width="60" height="45"
                                         style="object-fit: cover; border-radius: 4px;"
                                         onerror="this.src='/image/default.jpg'" />

                                </td>

                                <td>@blog.Title</td>
                                <td>@blog.ShortDescription</td>
                                <td>@blog.Category?.CategoryName</td>
                                <td>@(blog.AuthorAdmin?.FullName ?? blog.AuthorUser?.FullName ?? "Unknown")</td>
                                <td>
                                    @{
                                        string badgeClass = "bg-secondary";
                                        string statusText = "Unknown";

                                        if (blog.IsApproved == 0)
                                        {
                                            badgeClass = "bg-warning text-dark";
                                            statusText = "Pending";
                                        }
                                        else if (blog.IsApproved == 1)
                                        {
                                            badgeClass = "bg-success";
                                            statusText = "Approved";
                                        }
                                        else if (blog.IsApproved == 2)
                                        {
                                            badgeClass = "bg-danger";
                                            statusText = "Rejected";
                                        }
                                    }
                                    <span class="badge @badgeClass">@statusText</span>
                                </td>

                            <td>
                                <button class="status admit"
                                        style="border: none; outline: none; background-color:@(blog.Status == true ? "" : "#dc3545")"

                                                                                    onclick="toggleStatus(this, '@blog.BlogID', @(blog.Status.ToString().ToLower()))">

                                    @(blog.Status == true ? "Active" : "Disabled")
                                </button>
                            </td>
                            <td>
                                <div class="action-btns">
                                    <button class="action-btn edit"
                                            data-bs-toggle="modal"

                                                                                            onclick="fillEditModal('@blog.BlogID', '@blog.Title', '@blog.ShortDescription', '@blog.CategoryID')">

                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="action-btn delete"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal"

                                                                                            onclick="setDeleteBlogId('@blog.BlogID')">

                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                                                }
                    </tbody>
                </table>

            </div>
        </main>
    </div>




    <!-- Add Blog -->
    <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="/admin/blog/create" method="POST" enctype="multipart/form-data">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addModalLabel">Create Blog</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">
                        <div class="mb-3">
                            <label>Title</label>
                            <input name="Title" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label>Short Description</label>
                            <textarea name="ShortDescription" class="form-control" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label>Category</label>
                            <select class="form-control" name="CategoryID" required>
                                @foreach (var cat in ViewBag.Categories as List<GoEASy.Models.TourCategory>)
                                {
                                    <option value="@cat.CategoryID">@cat.CategoryName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Main Image (Avatar)</label>
                            <input type="file" name="avatar" class="form-control" accept="image/*" required />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Create Blog</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Edit Blog -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="/admin/blog/update" method="POST" enctype="multipart/form-data">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Edit Blog</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">

                        <input type="hidden" name="BlogID" id="editBlogId" />


                        <div class="mb-3">
                            <label>Title</label>
                            <input name="Title" class="form-control" id="editTitle" required />
                        </div>
                        <div class="mb-3">
                            <label>Short Description</label>
                            <textarea name="ShortDescription" class="form-control" id="editDesc" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label>Category</label>
                            <select class="form-control" name="CategoryID" id="editCategory" required>
                                @foreach (var cat in ViewBag.Categories as List<GoEASy.Models.TourCategory>)
                                {
                                    <option value="@cat.CategoryID">@cat.CategoryName</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label>Replace Avatar Image</label>
                            <input type="file" name="avatar" class="form-control" accept="image/*" />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Update Blog</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Delete -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <form method="post" action="/admin/blog/delete">
                <div class="modal-content border-danger">
                    <div class="modal-header bg-danger text-white">
                        <h5 class="modal-title">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this blog?</p>
                        <input type="hidden" name="id" id="deleteBlogID" />
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button class="btn btn-danger">Delete</button>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <script>
        function fillEditModal(id, title, desc, CategoryID) {
            document.getElementById('editBlogID').value = id;
            document.getElementById('editTitle').value = title;
            document.getElementById('editDesc').value = desc;
            document.getElementById('editCategory').value = CategoryID;
        }

        function setDeleteBlogID(id) {
            document.getElementById('deleteBlogID').value = id;
        }

    </script>


    <script>
        function toggleStatus(button, blogID, currentStatus) {
            fetch(`/admin/blog/toggle-status?id=${blogID}`, {
                method: 'POST'
            })
            .then(response => {
                if (response.ok) {
                    // Cập nhật UI
                    const newStatus = !(currentStatus === true || currentStatus === "true");
                    button.textContent = newStatus ? "Active" : "Disable";
                    button.style.backgroundColor = newStatus ? "" : "#dc3545";
                    button.setAttribute("onclick", `toggleStatus(this, '${blogID}', ${newStatus})`);

                    // Show success toast
                    const msg = "Status updated successfully!";
                    document.getElementById("toast-success-msg").value = msg;
                    document.querySelector("#successToast .toast-body").innerText = msg;
                    new bootstrap.Toast(document.getElementById("successToast"), { delay: 5000 }).show();
                } else {
                    // Show error toast
                    const msg = "Failed to update status.";
                    document.getElementById("toast-error-msg").value = msg;
                    document.querySelector("#errorToast .toast-body").innerText = msg;
                    new bootstrap.Toast(document.getElementById("errorToast"), { delay: 5000 }).show();
                }
            })
            .catch(error => {
                console.error("Error:", error);
                const msg = "An unexpected error occurred!";
                document.getElementById("toast-error-msg").value = msg;
                document.querySelector("#errorToast .toast-body").innerText = msg;
                new bootstrap.Toast(document.getElementById("errorToast"), { delay: 5000 }).show();
            });
        }
    </script>

    @* <script src="~/js/account-admin.js"></script> *@
    @Html.Partial("~/Views/admin/share/script.cshtml")

</body>
</html>
