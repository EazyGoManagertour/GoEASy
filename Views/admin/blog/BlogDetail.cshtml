<!DOCTYPE html>
<html lang="vi">
 @Html.Partial("~/Views/admin/share/head.cshtml")


<body>
    <!-- Header -->
    @Html.Partial("~/Views/admin/share/header.cshtml")

    <!-- Overlay for mobile -->
    <div class="overlay" onclick="toggleSidebar()"></div>

    <div class="container-content">
        <!-- Sidebar -->
        @Html.Partial("~/Views/admin/share/menu.cshtml")



        <!-- Toast Notification Area (independent from sidebar and overlay) -->
        <div id="toastArea"
             aria-live="polite"
             aria-atomic="true"
             class="toast-container position-fixed top-0 end-0 p-3"
             style="z-index: 1060; margin-top: 75px;">
            <input type="hidden" id="toast-success-msg" value="@TempData["Success"]" />
            <input type="hidden" id="toast-error-msg" value="@TempData["Error"]" />
            <!-- Success Toast -->
            <div class="toast align-items-center text-white bg-success border-0"
                 id="successToast"
                 role="alert"
                 aria-live="assertive"
                 aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        @TempData["Success"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>

            <!-- Error Toast -->
            <div class="toast align-items-center text-white bg-danger border-0"
                 id="errorToast"
                 role="alert"
                 aria-live="assertive"
                 aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        @TempData["Error"]
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-header">
                <h1 class="content-title">Manage BlogDetail</h1>
                <div class="action-buttons">
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">
                        <i class="fas fa-plus"></i>
                        Add New
                    </button>
                    <!-- <button class="btn btn-success">
                      <i class="fas fa-file-export"></i>
                      Xuất Excel
                    </button> -->
                </div>
            </div>


            <!-- Table 2 -->
            <div class="table-container">
                <div class="table-header">
                    <!-- <h1 class="table-title">Manage Account</h1> -->
                </div>
                <table>
                    <thead>
                        <tr>
                            <th></th>
                            <th>Main Image</th>
                            <th>Gallery</th>
                            <th>Blog</th>
                            <th>Introduction</th>
                            <th>Section Title 1</th>
                            <th>Section Content 1</th>
                            <th>Section Title 2</th>
                            <th>Section Content 2</th>
                            <th>Quote</th>
                            <th>Quote Author</th>
                            <th>Tag</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var detail in Model)
                        {
                            var blog = detail.Blog;

                            // ép kiểu rõ ràng về List<BlogImage>
                            var images = blog?.BlogImages as IEnumerable<GoEASy.Models.BlogImage> ?? new List<GoEASy.Models.BlogImage>();

                            var mainImg = images.FirstOrDefault(i => i.Type == "main");
                            var gallery = images.Where(i => i.Type == "gallery").ToList();

                            <tr>
                                <td><input type="checkbox" /></td>

                                <td>
                                    <img src="@(mainImg?.ImageURL ?? "/image/default.jpg")"
                                         width="60" height="45"
                                         style="object-fit:cover; border-radius:4px"
                                         onerror="this.src='/image/default.jpg'" />
                                </td>

                                <td>
                                    @if (gallery.Any())
                                    {
                                        string carouselId = $"carousel_{detail.BlogDetailID}";
                                        <div id="@carouselId" class="carousel slide" data-bs-ride="carousel" style="width: 120px;">
                                            <div class="carousel-inner">
                                                @for (int i = 0; i < gallery.Count; i++)
                                                {
                                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                                        <img src="@gallery[i].ImageURL"
                                                             class="d-block w-100"
                                                             style="height:60px; object-fit:cover; border-radius:4px"
                                                             onerror="this.src='/image/default.jpg'" />
                                                    </div>
                                                }
                                            </div>
                                            <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                                                <span class="carousel-control-prev-icon"></span>
                                            </button>
                                            <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                                                <span class="carousel-control-next-icon"></span>
                                            </button>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No images</span>
                                    }
                                </td>
                                <td>@blog?.Title</td>
                                <td>@detail.Introduction</td>
                                <td>@detail.Section1Title</td>
                                <td>@detail.Section1Content</td>
                                <td>@detail.Section2Title</td>
                                <td>@detail.Section2Content</td>
                                <td>
                                    @if (!string.IsNullOrWhiteSpace(detail.Quote))
                                    {
                                        <q>@detail.Quote</q>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No quote</span>
                                    }
                                </td>

                                <td>
                                    @if (!string.IsNullOrWhiteSpace(detail.QuoteAuthor))
                                    {
                                        <small class="text-muted">@detail.QuoteAuthor</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Unknown</span>
                                    }
                                </td>

                                <td>
                                    @{
                                        var mappings = detail.Blog?.BlogTagMappings as List<GoEASy.Models.BlogTagMapping> ?? new List<GoEASy.Models.BlogTagMapping>();
                                    }
                                    @if (mappings.Any())
                                    {
                                        foreach (var mapping in mappings)
                                        {
                                            var tagName = mapping.Tag?.Name;
                                            if (!string.IsNullOrWhiteSpace(tagName))
                                            {
                                                <span class="badge bg-secondary me-1">@tagName</span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">No tags</span>
                                    }
                                </td>

                                <td>
                                    <button class="status admit"
                                            style="border: none; outline: none; background-color:@(detail.Status == true ? "" : "#dc3545")"
                                            onclick="toggleStatus(this, '@detail.BlogID', @(detail.Status.ToString().ToLower()))">
                                        @(detail.Status == true ? "Active" : "Disabled")
                                    </button>
                                </td>

                                <td>
                                    <div class="action-btns">
  
                                        <button class="action-btn edit"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editModal"
                                                onclick="fillEditDetail(this)"
                                                data-id="@detail.BlogDetailID"
                                                data-intro="@detail.Introduction"
                                                data-s1title="@detail.Section1Title"
                                                data-s1content="@detail.Section1Content"
                                                data-s2title="@detail.Section2Title"
                                                data-s2content="@detail.Section2Content"
                                                data-quote="@detail.Quote"
                                                data-quoteauthor="@detail.QuoteAuthor"
                                           
                                                data-tags="@string.Join(",", ((IEnumerable<GoEASy.Models.BlogTagMapping>)detail.Blog?.BlogTagMappings)?.Select(m => m.TagID) ?? new List<int>())">
                                            <i class="fas fa-edit"></i>
                                        </button>

                                        <button class="action-btn delete"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteModal"

                                                onclick="setDeleteDetailId('@detail.BlogDetailID')">

                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </main>
    </div>




    <!-- Add Blog Detail -->
    <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form action="/admin/blog-detail/create" method="POST" enctype="multipart/form-data">
                    <div class="modal-header">
                        <h5 class="modal-title">Create Blog Detail</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    
                    <div class="modal-body row g-3">
                        <div class="col-md-12">
                            <label>Blog</label>
                            <select name="BlogID" class="form-select" required>
                                <option value="">-- Select Blog --</option>
                                @foreach (var blog in ViewBag.Blogs as List<GoEASy.Models.Blog>)
                                {
                                    <option value="@blog.BlogID">@blog.Title</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-12">
                            <label>Introduction</label>
                            <textarea name="Introduction" class="form-control" required></textarea>
                        </div>

                        <div class="col-md-6">
                            <label>Section 1 Title</label>
                            <input name="Section1Title" class="form-control" />
                        </div>
                        <div class="col-md-12">
                            <label>Section 1 Content</label>
                            <textarea name="Section1Content" id="section1Content" class="form-control"></textarea>
                        </div>

                        <div class="col-md-6">
                            <label>Section 2 Title</label>
                            <input name="Section2Title" class="form-control" />
                        </div>
                        <div class="col-md-12">
                            <label>Section 2 Content</label>
                            <textarea name="Section2Content" id="section2Content" class="form-control"></textarea>
                        </div>

                        <div class="col-md-6">
                            <label>Quote</label>
                            <input name="Quote" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label>Quote Author</label>
                            <input name="QuoteAuthor" class="form-control" />
                        </div>

                        <div class="col-md-6">
                            <label>Main Image (Type: main)</label>
                            <input type="file" name="mainImage" class="form-control" accept="image/*" />
                        </div>

                        <div class="col-md-6">
                            <label>Gallery Images (Type: gallery)</label>
                            <input type="file" name="galleryImages" class="form-control" multiple accept="image/*" />
                        </div>

                        <div class="col-md-12">
                            <label>Tags</label><br />
                            @foreach (var tag in ViewBag.Tags as List<GoEASy.Models.BlogTag>)
                            {
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="selectedTags" value="@tag.TagID" />
                                    <label class="form-check-label">@tag.Name</label>
                                </div>
                            }
                        </div>
                      
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Create Detail</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Edit Blog Detail -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form action="/admin/blog-detail/update" method="POST" enctype="multipart/form-data">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Blog Detail</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>

                    <div class="modal-body row g-3">

                        <input type="hidden" name="BlogDetailID" id="editDetailId" />


                        <div class="col-md-12">
                            <label>Introduction</label>
                            <textarea name="Introduction" id="editIntro" class="form-control" required></textarea>
                        </div>

                        <div class="col-md-6">
                            <label>Section 1 Title</label>
                            <input name="Section1Title" id="editS1Title" class="form-control" />
                        </div>
                        <div class="col-md-12">
                            <label>Section 1 Content</label>
                            <textarea name="Section1Content" id="editS1Content" class="form-control"></textarea>
                        </div>

                        <div class="col-md-6">
                            <label>Section 2 Title</label>
                            <input name="Section2Title" id="editS2Title" class="form-control" />
                        </div>
                        <div class="col-md-12">
                            <label>Section 2 Content</label>
                            <textarea name="Section2Content" id="editS2Content" class="form-control"></textarea>
                        </div>

                        <div class="col-md-6">
                            <label>Quote</label>
                            <input name="Quote" id="editQuote" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label>Quote Author</label>
                            <input name="QuoteAuthor" id="editQuoteAuthor" class="form-control" />
                        </div>

                        <div class="col-md-6">
                            <label>Replace Main Image</label>
                            <input type="file" name="mainImage" class="form-control" accept="image/*" />
                        </div>

                        <div class="col-md-6">
                            <label>Add More Gallery Images</label>
                            <input type="file" name="galleryImages" class="form-control" multiple accept="image/*" />
                        </div>

                        <div class="col-md-12">
                            <label>Tags</label><br />
                            @foreach (var tag in ViewBag.Tags as List<GoEASy.Models.BlogTag>)
                            {
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="selectedTags" value="@tag.TagID" />
                                    <label class="form-check-label">@tag.Name</label>
                                </div>
                            }

                        </div>
                 
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Update Detail</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- Delete Blog Detail -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <form method="post" action="/admin/blog-detail/delete">
                <div class="modal-content border-danger">
                    <div class="modal-header bg-danger text-white">
                        <h5 class="modal-title">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this blog detail?</p>
                        <input type="hidden" name="id" id="deleteDetailID" />
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button class="btn btn-danger">Delete</button>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/classic/ckeditor.js"></script>

    <script>
        ClassicEditor
            .create(document.querySelector('#section1Content'))
            .catch(error => {
                console.error(error);
            });

        ClassicEditor
            .create(document.querySelector('#section2Content'))
            .catch(error => {
                console.error(error);
            });
    </script>

    <script>
        let editorS1 = null;
        let editorS2 = null;

        async function fillEditDetail(btn) {
            // Gán giá trị như cũ
            document.getElementById('editDetailID').value    = btn.dataset.id;
            document.getElementById('editIntro').value       = decodeURIComponent(btn.dataset.intro);
            document.getElementById('editS1Title').value     = decodeURIComponent(btn.dataset.s1title);
            document.getElementById('editS2Title').value     = decodeURIComponent(btn.dataset.s2title);
            document.getElementById('editQuote').value       = decodeURIComponent(btn.dataset.quote);
            document.getElementById('editQuoteAuthor').value = decodeURIComponent(btn.dataset.quoteauthor);

            // Gán dữ liệu CKEditor
            const s1Content = decodeURIComponent(btn.dataset.s1content);
            const s2Content = decodeURIComponent(btn.dataset.s2content);

            // Nếu đã khởi tạo rồi thì destroy trước
            if (editorS1) await editorS1.destroy();
            if (editorS2) await editorS2.destroy();

            // Gán lại textarea content trước khi khởi tạo
            document.getElementById('editS1Content').value = s1Content;
            document.getElementById('editS2Content').value = s2Content;

            // Khởi tạo lại CKEditor
            ClassicEditor.create(document.querySelector('#editS1Content'))
                .then(editor => editorS1 = editor)
                .catch(error => console.error('CKEditor Section1 error:', error));

            ClassicEditor.create(document.querySelector('#editS2Content'))
                .then(editor => editorS2 = editor)
                .catch(error => console.error('CKEditor Section2 error:', error));

            // Tags
            const selected = (btn.dataset.tags || "").split(',').map(Number);
            document.querySelectorAll("input[name='selectedTags']").forEach(cb => {
                cb.checked = selected.includes(parseInt(cb.value));
            });
        }
    </script>


    <script>
        function toggleStatus(button, BlogDetailID, currentStatus) {
            fetch(`/admin/blog-detail/toggle-status?id=${BlogDetailID}`, {
                method: 'POST'
            })
            .then(response => {
                if (response.ok) {
                    // Cập nhật UI
                    const newStatus = !(currentStatus === true || currentStatus === "true");
                    button.textContent = newStatus ? "Active" : "Disable";
                    button.style.backgroundColor = newStatus ? "" : "#dc3545";
                    button.setAttribute("onclick", `toggleStatus(this, '${BlogDetailID}', ${newStatus})`);

                    // Show success toast
                    const msg = "Status updated successfully!";
                    document.getElementById("toast-success-msg").value = msg;
                    document.querySelector("#successToast .toast-body").innerText = msg;
                    new bootstrap.Toast(document.getElementById("successToast"), { delay: 5000 }).show();
                } else {
                    // Show error toast
                    const msg = "Failed to update status.";
                    document.getElementById("toast-error-msg").value = msg;
                    document.querySelector("#errorToast .toast-body").innerText = msg;
                    new bootstrap.Toast(document.getElementById("errorToast"), { delay: 5000 }).show();
                }
            })
            .catch(error => {
                console.error("Error:", error);
                const msg = "An unexpected error occurred!";
                document.getElementById("toast-error-msg").value = msg;
                document.querySelector("#errorToast .toast-body").innerText = msg;
                new bootstrap.Toast(document.getElementById("errorToast"), { delay: 5000 }).show();
            });
        }
    </script>
    @* <script src="~/js/account-admin.js"></script> *@
    @Html.Partial("~/Views/admin/share/script.cshtml")

</body>
</html>
