// <auto-generated />
using System;
using GoEASy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoEASy.Migrations
{
    [DbContext(typeof(GoEasyContext))]
    partial class GoEasyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GoEASy.Models.AccessLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("LogID")
                        .HasName("PK__AccessLo__5E5499A829083A81");

                    b.HasIndex("UserID");

                    b.ToTable("AccessLog", (string)null);
                });

            modelBuilder.Entity("GoEASy.Models.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActionSlug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("ActionId")
                        .HasName("PK__Actions__FFE3F4D96FF455FB");

                    b.HasIndex(new[] { "ActionSlug" }, "UQ__Actions__3148953D345B849D")
                        .IsUnique();

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("GoEASy.Models.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdminID")
                        .HasName("PK__Admins__719FE4E8103D4241");

                    b.HasIndex("RuleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Admins__536C85E4EC6305B7")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Admins__A9D1053452D3FF2D")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("GoEASy.Models.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogID"));

                    b.Property<int?>("AuthorAdminID")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorUserID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<byte?>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("BlogID")
                        .HasName("PK__Blogs__54379E5054BD6FC5");

                    b.HasIndex("AuthorAdminID");

                    b.HasIndex("AuthorUserID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("GoEASy.Models.BlogComment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID")
                        .HasName("PK__BlogComm__C3B4DFAA9DEABC40");

                    b.HasIndex("BlogID");

                    b.HasIndex("UserID");

                    b.ToTable("BlogComments");
                });

            modelBuilder.Entity("GoEASy.Models.BlogDetail", b =>
                {
                    b.Property<int>("BlogDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogDetailID"));

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteAuthor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Section1Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section1Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Section2Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section2Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("BlogDetailID")
                        .HasName("PK__BlogDeta__2383E81E48705695");

                    b.HasIndex(new[] { "BlogID" }, "UQ__BlogDeta__54379E51A558E9D1")
                        .IsUnique();

                    b.ToTable("BlogDetails");
                });

            modelBuilder.Entity("GoEASy.Models.BlogImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsMain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("ImageID")
                        .HasName("PK__BlogImag__7516F4EC54DE70B5");

                    b.HasIndex("BlogID");

                    b.ToTable("BlogImages");
                });

            modelBuilder.Entity("GoEASy.Models.BlogTag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagID"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("TagID")
                        .HasName("PK__BlogTags__657CFA4CBAFE00EC");

                    b.HasIndex(new[] { "Name" }, "UQ__BlogTags__737584F6AEFE61A6")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("BlogTags");
                });

            modelBuilder.Entity("GoEASy.Models.BlogTagMapping", b =>
                {
                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("BlogID", "TagID")
                        .HasName("PK__BlogTagM__826051F465023A30");

                    b.HasIndex("TagID");

                    b.ToTable("BlogTagMapping", (string)null);
                });

            modelBuilder.Entity("GoEASy.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<int>("AdultGuests")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("ChildGuests")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<decimal?>("DiscountAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("TourID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("UsedVIPPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BookingID")
                        .HasName("PK__Bookings__73951ACDFA0E4E79");

                    b.HasIndex("DiscountID");

                    b.HasIndex("TourID");

                    b.HasIndex("UserID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("GoEASy.Models.Companion", b =>
                {
                    b.Property<int>("CompanionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanionID"));

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NationalID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CompanionID")
                        .HasName("PK__Companio__8B53BE8BB4D8595E");

                    b.HasIndex("UserID");

                    b.ToTable("Companions");
                });

            modelBuilder.Entity("GoEASy.Models.Destination", b =>
                {
                    b.Property<int>("DestinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationID"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("DestinationID")
                        .HasName("PK__Destinat__DB5FE4AC0E1447D3");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("GoEASy.Models.DestinationImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("DestinationID")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsCover")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("ImageID")
                        .HasName("PK__Destinat__7516F4ECDC4B0B39");

                    b.HasIndex("DestinationID");

                    b.ToTable("DestinationImages");
                });

            modelBuilder.Entity("GoEASy.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("MinTotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Percentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("DiscountID")
                        .HasName("PK__Discount__E43F6DF60725D9D5");

                    b.HasIndex(new[] { "Code" }, "UQ__Discount__A25C5AA75290125B")
                        .IsUnique();

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("GoEASy.Models.Favorite", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("UserID", "TourID")
                        .HasName("PK__Favorite__018C020D2A7422D0");

                    b.HasIndex("TourID");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("GoEASy.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("RelatedId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12B5A7FFA5");

                    b.HasIndex(new[] { "UserId" }, "IX_Notifications_UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("GoEASy.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("BookingID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.HasKey("PaymentID")
                        .HasName("PK__Payments__9B556A583D71F123");

                    b.HasIndex("BookingID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GoEASy.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("SentimentScore")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TourID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReviewID")
                        .HasName("PK__Reviews__74BC79AEE3A98EAA");

                    b.HasIndex("TourID");

                    b.HasIndex("UserID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("GoEASy.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleID")
                        .HasName("PK__Roles__8AFACE3AD5502F2C");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61601238DB49")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GoEASy.Models.Rule", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<bool?>("IsOpen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ListRuleSlug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RuleId")
                        .HasName("PK__Rules__110458E2CA33AFC8");

                    b.HasIndex(new[] { "Slug" }, "UQ__Rules__BC7B5FB673C7CE77")
                        .IsUnique();

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("GoEASy.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleID"));

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TourID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleID")
                        .HasName("PK__Schedule__9C8A5B696B2581C2");

                    b.HasIndex("TourID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("GoEASy.Models.Tour", b =>
                {
                    b.Property<int>("TourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourID"));

                    b.Property<decimal>("AdultPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("ChildPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TourID")
                        .HasName("PK__Tours__604CEA10C292330F");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DestinationID");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("GoEASy.Models.TourCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("CategoryID")
                        .HasName("PK__TourCate__19093A2B59400476");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__TourCate__8517B2E0BF7EDA02")
                        .IsUnique();

                    b.ToTable("TourCategories");
                });

            modelBuilder.Entity("GoEASy.Models.TourDetail", b =>
                {
                    b.Property<int>("TourDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourDetailID"));

                    b.Property<string>("Activities")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excluded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Included")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.HasKey("TourDetailID")
                        .HasName("PK__TourDeta__5055BCFC4F3EBFE2");

                    b.HasIndex(new[] { "TourID" }, "UQ__TourDeta__604CEA11FC75AA34")
                        .IsUnique();

                    b.ToTable("TourDetails");
                });

            modelBuilder.Entity("GoEASy.Models.TourFAQ", b =>
                {
                    b.Property<int>("FAQID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQID"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TourID")
                        .HasColumnType("int");

                    b.HasKey("FAQID")
                        .HasName("PK__TourFAQs__4B89D1E2AA962951");

                    b.HasIndex("TourID");

                    b.ToTable("TourFAQs");
                });

            modelBuilder.Entity("GoEASy.Models.TourImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("Caption")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsCover")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("TourID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("ImageID")
                        .HasName("PK__TourImag__7516F4EC3FE9F5B0");

                    b.HasIndex("TourID");

                    b.ToTable("TourImages");
                });

            modelBuilder.Entity("GoEASy.Models.TourItinerary", b =>
                {
                    b.Property<int>("ItineraryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItineraryID"));

                    b.Property<string>("Accommodation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int?>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meals")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TourID")
                        .HasColumnType("int");

                    b.HasKey("ItineraryID")
                        .HasName("PK__TourItin__361216A6B2E37400");

                    b.HasIndex("TourID");

                    b.ToTable("TourItineraries");
                });

            modelBuilder.Entity("GoEASy.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsVIP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VIPPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("UserID")
                        .HasName("PK__Users__1788CCACF72813F8");

                    b.HasIndex("RoleID");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E462158B79")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053449FFE89D")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GoEASy.Models.VIPPointHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<int?>("ChangeAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID")
                        .HasName("PK__VIPPoint__4D7B4ADD00D970C3");

                    b.HasIndex("UserID");

                    b.ToTable("VIPPointHistory", (string)null);
                });

            modelBuilder.Entity("GoEASy.Models.AccessLog", b =>
                {
                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("AccessLogs")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__AccessLog__UserI__114A936A");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.Admin", b =>
                {
                    b.HasOne("GoEASy.Models.Rule", "Rule")
                        .WithMany("Admins")
                        .HasForeignKey("RuleId")
                        .HasConstraintName("FK_Admins_Rules");

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("GoEASy.Models.Blog", b =>
                {
                    b.HasOne("GoEASy.Models.Admin", "AuthorAdmin")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorAdminID")
                        .HasConstraintName("FK__Blogs__AuthorAdm__18EBB532");

                    b.HasOne("GoEASy.Models.User", "AuthorUser")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorUserID")
                        .HasConstraintName("FK__Blogs__AuthorUse__17F790F9");

                    b.HasOne("GoEASy.Models.TourCategory", "Category")
                        .WithMany("Blogs")
                        .HasForeignKey("CategoryID")
                        .IsRequired()
                        .HasConstraintName("FK__Blogs__CategoryI__19DFD96B");

                    b.Navigation("AuthorAdmin");

                    b.Navigation("AuthorUser");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GoEASy.Models.BlogComment", b =>
                {
                    b.HasOne("GoEASy.Models.Blog", "Blog")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogID")
                        .IsRequired()
                        .HasConstraintName("FK__BlogComme__BlogI__236943A5");

                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("BlogComments")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__BlogComme__UserI__245D67DE");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.BlogDetail", b =>
                {
                    b.HasOne("GoEASy.Models.Blog", "Blog")
                        .WithOne("BlogDetail")
                        .HasForeignKey("GoEASy.Models.BlogDetail", "BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BlogDetai__BlogI__1F98B2C1");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("GoEASy.Models.BlogImage", b =>
                {
                    b.HasOne("GoEASy.Models.Blog", "Blog")
                        .WithMany("BlogImages")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BlogImage__BlogI__29221CFB");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("GoEASy.Models.BlogTagMapping", b =>
                {
                    b.HasOne("GoEASy.Models.Blog", "Blog")
                        .WithMany("BlogTagMappings")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BlogTagMa__BlogI__30C33EC3");

                    b.HasOne("GoEASy.Models.BlogTag", "Tag")
                        .WithMany("BlogTagMappings")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BlogTagMa__TagID__31B762FC");

                    b.Navigation("Blog");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("GoEASy.Models.Booking", b =>
                {
                    b.HasOne("GoEASy.Models.Discount", "Discount")
                        .WithMany("Bookings")
                        .HasForeignKey("DiscountID")
                        .HasConstraintName("FK__Bookings__Discou__778AC167");

                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("TourID")
                        .HasConstraintName("FK__Bookings__TourID__76969D2E");

                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__Bookings__UserID__75A278F5");

                    b.Navigation("Discount");

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.Companion", b =>
                {
                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("Companions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Companion__UserI__367C1819");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.DestinationImage", b =>
                {
                    b.HasOne("GoEASy.Models.Destination", "Destination")
                        .WithMany("DestinationImages")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Destinati__Desti__52593CB8");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("GoEASy.Models.Favorite", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("Favorites")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__TourI__09A971A2");

                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__UserI__08B54D69");

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.Notification", b =>
                {
                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__47A6A41B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.Payment", b =>
                {
                    b.HasOne("GoEASy.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingID")
                        .HasConstraintName("FK__Payments__Bookin__7C4F7684");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("GoEASy.Models.Review", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("Reviews")
                        .HasForeignKey("TourID")
                        .HasConstraintName("FK__Reviews__TourID__02084FDA");

                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserID")
                        .HasConstraintName("FK__Reviews__UserID__01142BA1");

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.Schedule", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("Schedules")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Schedules__TourI__656C112C");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoEASy.Models.Tour", b =>
                {
                    b.HasOne("GoEASy.Models.TourCategory", "Category")
                        .WithMany("Tours")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK__Tours__CategoryI__5DCAEF64");

                    b.HasOne("GoEASy.Models.User", "CreatedByNavigation")
                        .WithMany("Tours")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Tours__CreatedBy__5BE2A6F2");

                    b.HasOne("GoEASy.Models.Destination", "Destination")
                        .WithMany("Tours")
                        .HasForeignKey("DestinationID")
                        .HasConstraintName("FK__Tours__Destinati__5CD6CB2B");

                    b.Navigation("Category");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("GoEASy.Models.TourDetail", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithOne("TourDetail")
                        .HasForeignKey("GoEASy.Models.TourDetail", "TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TourDetai__TourI__3B40CD36");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoEASy.Models.TourFAQ", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("TourFAQs")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TourFAQs__TourID__42E1EEFE");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoEASy.Models.TourImage", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("TourImages")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TourImage__TourI__628FA481");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoEASy.Models.TourItinerary", b =>
                {
                    b.HasOne("GoEASy.Models.Tour", "Tour")
                        .WithMany("TourItineraries")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__TourItine__TourI__3F115E1A");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("GoEASy.Models.User", b =>
                {
                    b.HasOne("GoEASy.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .HasConstraintName("FK__Users__RoleID__412EB0B6");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GoEASy.Models.VIPPointHistory", b =>
                {
                    b.HasOne("GoEASy.Models.User", "User")
                        .WithMany("VIPPointHistories")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__VIPPointH__UserI__0D7A0286");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoEASy.Models.Admin", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("GoEASy.Models.Blog", b =>
                {
                    b.Navigation("BlogComments");

                    b.Navigation("BlogDetail");

                    b.Navigation("BlogImages");

                    b.Navigation("BlogTagMappings");
                });

            modelBuilder.Entity("GoEASy.Models.BlogTag", b =>
                {
                    b.Navigation("BlogTagMappings");
                });

            modelBuilder.Entity("GoEASy.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GoEASy.Models.Destination", b =>
                {
                    b.Navigation("DestinationImages");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("GoEASy.Models.Discount", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("GoEASy.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GoEASy.Models.Rule", b =>
                {
                    b.Navigation("Admins");
                });

            modelBuilder.Entity("GoEASy.Models.Tour", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Favorites");

                    b.Navigation("Reviews");

                    b.Navigation("Schedules");

                    b.Navigation("TourDetail");

                    b.Navigation("TourFAQs");

                    b.Navigation("TourImages");

                    b.Navigation("TourItineraries");
                });

            modelBuilder.Entity("GoEASy.Models.TourCategory", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("GoEASy.Models.User", b =>
                {
                    b.Navigation("AccessLogs");

                    b.Navigation("BlogComments");

                    b.Navigation("Blogs");

                    b.Navigation("Bookings");

                    b.Navigation("Companions");

                    b.Navigation("Favorites");

                    b.Navigation("Notifications");

                    b.Navigation("Reviews");

                    b.Navigation("Tours");

                    b.Navigation("VIPPointHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
